version: '3.8'

services:
  # Infrastructure Services
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  consul:
    image: consul:latest
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: ["CMD", "consul", "members"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  vault:
    image: vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8090:8090"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - rabbitmq
      - consul
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  # Infrastructure Services
  database-service:
    build:
      context: .
      dockerfile: database-service/Dockerfile
    container_name: database-service
    ports:
      - "8115:8115"
    environment:
      - POSTGRES_URL=postgres://neondb_owner:npg_6oAPnbj5zIKN@ep-wispy-union-adi5og8a-pooler.c-2.us-east-1.aws.neon.tech:5432/neondb?sslmode=require
      - MONGODB_URL=mongodb+srv://tendai_db_user:aEmut0m48FtaES1E@cluster0.csdtbuo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - REDIS_URL=redis://localhost:6379
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8115/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  monitoring-service:
    build:
      context: .
      dockerfile: monitoring-service/Dockerfile
    container_name: monitoring-service
    ports:
      - "8116:8116"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - prometheus
      - grafana
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8116/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  message-queue-service:
    build:
      context: .
      dockerfile: message-queue-service/Dockerfile
    container_name: message-queue-service
    ports:
      - "8117:8117"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - MONGODB_URL=mongodb+srv://tendai_db_user:aEmut0m48FtaES1E@cluster0.csdtbuo.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8117/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  service-discovery:
    build:
      context: .
      dockerfile: service-discovery/Dockerfile
    container_name: service-discovery
    ports:
      - "8118:8118"
    environment:
      - CONSUL_ADDR=consul:8500
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8118/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  vault-service:
    build:
      context: .
      dockerfile: vault-service/Dockerfile
    container_name: vault-service
    ports:
      - "8119:8119"
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=dev-token
    depends_on:
      vault:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8119/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  # Business Services
  escrow-service:
    build:
      context: .
      dockerfile: escrow-service/Dockerfile
    container_name: escrow-service
    ports:
      - "8081:8081"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "8083:8083"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  ledger-service:
    build:
      context: .
      dockerfile: ledger-service/Dockerfile
    container_name: ledger-service
    ports:
      - "8084:8084"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  risk-service:
    build:
      context: .
      dockerfile: risk-service/Dockerfile
    container_name: risk-service
    ports:
      - "8085:8085"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  treasury-service:
    build:
      context: .
      dockerfile: treasury-service/Dockerfile
    container_name: treasury-service
    ports:
      - "8086:8086"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  evidence-service:
    build:
      context: .
      dockerfile: evidence-service/Dockerfile
    container_name: evidence-service
    ports:
      - "8087:8087"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8087/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  compliance-service:
    build:
      context: .
      dockerfile: compliance-service/Dockerfile
    container_name: compliance-service
    ports:
      - "8088:8088"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  workflow-service:
    build:
      context: .
      dockerfile: workflow-service/Dockerfile
    container_name: workflow-service
    ports:
      - "8089:8089"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  journal-service:
    build:
      context: .
      dockerfile: journal-service/Dockerfile
    container_name: journal-service
    ports:
      - "8091:8091"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8091/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  fees-service:
    build:
      context: .
      dockerfile: fees-service/Dockerfile
    container_name: fees-service
    ports:
      - "8092:8092"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8092/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  refunds-service:
    build:
      context: .
      dockerfile: refunds-service/Dockerfile
    container_name: refunds-service
    ports:
      - "8093:8093"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8093/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  transfers-service:
    build:
      context: .
      dockerfile: transfers-service/Dockerfile
    container_name: transfers-service
    ports:
      - "8094:8094"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8094/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  fx-service:
    build:
      context: .
      dockerfile: fx-service/Dockerfile
    container_name: fx-service
    ports:
      - "8095:8095"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8095/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  payouts-service:
    build:
      context: .
      dockerfile: payouts-service/Dockerfile
    container_name: payouts-service
    ports:
      - "8096:8096"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8096/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  reserves-service:
    build:
      context: .
      dockerfile: reserves-service/Dockerfile
    container_name: reserves-service
    ports:
      - "8097:8097"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8097/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  reconciliation-service:
    build:
      context: .
      dockerfile: reconciliation-service/Dockerfile
    container_name: reconciliation-service
    ports:
      - "8098:8098"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8098/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  kyb-service:
    build:
      context: .
      dockerfile: kyb-service/Dockerfile
    container_name: kyb-service
    ports:
      - "8099:8099"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8099/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  sca-service:
    build:
      context: .
      dockerfile: sca-service/Dockerfile
    container_name: sca-service
    ports:
      - "8100:8100"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8100/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  disputes-service:
    build:
      context: .
      dockerfile: disputes-service/Dockerfile
    container_name: disputes-service
    ports:
      - "8101:8101"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8101/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  dx-service:
    build:
      context: .
      dockerfile: dx-service/Dockerfile
    container_name: dx-service
    ports:
      - "8102:8102"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8102/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  # Critical Infrastructure Services
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "8103:8103"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8103/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  idempotency-service:
    build:
      context: .
      dockerfile: idempotency-service/Dockerfile
    container_name: idempotency-service
    ports:
      - "8104:8104"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8104/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  eventbus-service:
    build:
      context: .
      dockerfile: eventbus-service/Dockerfile
    container_name: eventbus-service
    ports:
      - "8105:8105"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8105/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  saga-service:
    build:
      context: .
      dockerfile: saga-service/Dockerfile
    container_name: saga-service
    ports:
      - "8106:8106"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8106/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  vault-service-old:
    build:
      context: .
      dockerfile: vault-service/Dockerfile
    container_name: vault-service-old
    ports:
      - "8107:8107"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8107/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  webhooks-service:
    build:
      context: .
      dockerfile: webhooks-service/Dockerfile
    container_name: webhooks-service
    ports:
      - "8108:8108"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  observability-service:
    build:
      context: .
      dockerfile: observability-service/Dockerfile
    container_name: observability-service
    ports:
      - "8109:8109"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8109/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  config-service:
    build:
      context: .
      dockerfile: config-service/Dockerfile
    container_name: config-service
    ports:
      - "8110:8110"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8110/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  workers-service:
    build:
      context: .
      dockerfile: workers-service/Dockerfile
    container_name: workers-service
    ports:
      - "8111:8111"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8111/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  portal-service:
    build:
      context: .
      dockerfile: portal-service/Dockerfile
    container_name: portal-service
    ports:
      - "8112:8112"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8112/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  data-platform-service:
    build:
      context: .
      dockerfile: data-platform-service/Dockerfile
    container_name: data-platform-service
    ports:
      - "8113:8113"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8113/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

  compliance-ops-service:
    build:
      context: .
      dockerfile: compliance-ops-service/Dockerfile
    container_name: compliance-ops-service
    ports:
      - "8114:8114"
    environment:
      - ENVIRONMENT=production
    depends_on:
      - database-service
      - message-queue-service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8114/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - financial_network

volumes:
  rabbitmq_data:
  consul_data:
  vault_data:
  prometheus_data:
  grafana_data:

networks:
  financial_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
