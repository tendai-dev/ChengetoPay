# Developer Portal Configuration for Financial Platform
# Comprehensive developer portal for API management and developer experience

# Developer Portal Framework
developer_portal:
  # Portal Configuration
  portal_config:
    name: "Financial Platform Developer Portal"
    description: "Comprehensive developer portal for Financial Platform APIs"
    version: "1.0.0"
    base_url: "https://developers.financialplatform.com"
    contact_email: "developers@financialplatform.com"
    
    # Portal Features
    features:
      - name: "api_explorer"
        description: "Interactive API explorer"
        enabled: true
        
      - name: "code_samples"
        description: "Code samples and SDKs"
        enabled: true
        
      - name: "documentation"
        description: "Comprehensive documentation"
        enabled: true
        
      - name: "testing_tools"
        description: "API testing tools"
        enabled: true
        
      - name: "analytics"
        description: "API usage analytics"
        enabled: true
        
      - name: "support"
        description: "Developer support"
        enabled: true

# API Management
api_management:
  # API Gateway Integration
  gateway_integration:
    enabled: true
    gateway_url: "https://api.financialplatform.com"
    admin_url: "https://admin-api.financialplatform.com"
    
    # API Categories
    api_categories:
      - name: "payments"
        description: "Payment processing APIs"
        icon: "credit-card"
        color: "#28a745"
        
      - name: "escrow"
        description: "Escrow management APIs"
        icon: "shield"
        color: "#007bff"
        
      - name: "users"
        description: "User management APIs"
        icon: "users"
        color: "#6f42c1"
        
      - name: "compliance"
        description: "Compliance and regulatory APIs"
        icon: "check-circle"
        color: "#fd7e14"
        
      - name: "analytics"
        description: "Analytics and reporting APIs"
        icon: "chart-bar"
        color: "#e83e8c"

  # API Versioning
  api_versioning:
    enabled: true
    versioning_strategy: "url_path"
    current_version: "v1"
    supported_versions: ["v1", "v2"]
    
    # Version Lifecycle
    version_lifecycle:
      - version: "v1"
        status: "current"
        release_date: "2024-01-01"
        deprecation_date: "2025-01-01"
        sunset_date: "2026-01-01"
        
      - version: "v2"
        status: "beta"
        release_date: "2024-06-01"
        deprecation_date: "2026-06-01"
        sunset_date: "2027-06-01"

# Developer Experience
developer_experience:
  # Getting Started
  getting_started:
    enabled: true
    
    # Quick Start Guide
    quick_start:
      - step: 1
        title: "Create Account"
        description: "Sign up for a developer account"
        action: "register"
        url: "/register"
        
      - step: 2
        title: "Get API Key"
        description: "Generate your API key"
        action: "generate_key"
        url: "/dashboard/api-keys"
        
      - step: 3
        title: "Make First Request"
        description: "Test the API with a simple request"
        action: "test_api"
        url: "/docs/quick-start"
        
      - step: 4
        title: "Explore APIs"
        description: "Browse available APIs"
        action: "explore"
        url: "/apis"

  # Code Samples
  code_samples:
    enabled: true
    
    # Programming Languages
    languages:
      - name: "javascript"
        description: "JavaScript/Node.js"
        icon: "js"
        samples:
          - name: "payment_processing"
            description: "Process a payment"
            code: |
              const axios = require('axios');
              
              const processPayment = async (paymentData) => {
                try {
                  const response = await axios.post(
                    'https://api.financialplatform.com/api/v1/payment/process',
                    paymentData,
                    {
                      headers: {
                        'Authorization': `Bearer ${API_KEY}`,
                        'Content-Type': 'application/json'
                      }
                    }
                  );
                  return response.data;
                } catch (error) {
                  console.error('Payment processing failed:', error.response.data);
                  throw error;
                }
              };
              
      - name: "python"
        description: "Python"
        icon: "python"
        samples:
          - name: "payment_processing"
            description: "Process a payment"
            code: |
              import requests
              
              def process_payment(payment_data):
                  try:
                      response = requests.post(
                          'https://api.financialplatform.com/api/v1/payment/process',
                          json=payment_data,
                          headers={
                              'Authorization': f'Bearer {API_KEY}',
                              'Content-Type': 'application/json'
                          }
                      )
                      response.raise_for_status()
                      return response.json()
                  except requests.exceptions.RequestException as e:
                      print(f'Payment processing failed: {e}')
                      raise
                      
      - name: "java"
        description: "Java"
        icon: "java"
        samples:
          - name: "payment_processing"
            description: "Process a payment"
            code: |
              import java.net.http.HttpClient;
              import java.net.http.HttpRequest;
              import java.net.http.HttpResponse;
              import java.net.URI;
              
              public class PaymentProcessor {
                  public static String processPayment(String paymentData) throws Exception {
                      HttpClient client = HttpClient.newHttpClient();
                      
                      HttpRequest request = HttpRequest.newBuilder()
                          .uri(URI.create("https://api.financialplatform.com/api/v1/payment/process"))
                          .header("Authorization", "Bearer " + API_KEY)
                          .header("Content-Type", "application/json")
                          .POST(HttpRequest.BodyPublishers.ofString(paymentData))
                          .build();
                      
                      HttpResponse<String> response = client.send(request, 
                          HttpResponse.BodyHandlers.ofString());
                      
                      if (response.statusCode() != 200) {
                          throw new RuntimeException("Payment processing failed: " + response.body());
                      }
                      
                      return response.body();
                  }
              }
              
      - name: "curl"
        description: "cURL"
        icon: "terminal"
        samples:
          - name: "payment_processing"
            description: "Process a payment"
            code: |
              curl -X POST https://api.financialplatform.com/api/v1/payment/process \
                -H "Authorization: Bearer YOUR_API_KEY" \
                -H "Content-Type: application/json" \
                -d '{
                  "amount": 100.00,
                  "currency": "USD",
                  "payment_method": "card",
                  "description": "Test payment"
                }'

# SDKs and Libraries
sdks_libraries:
  # Official SDKs
  official_sdks:
    - name: "javascript-sdk"
      description: "Official JavaScript SDK"
      version: "1.0.0"
      repository: "https://github.com/financial-platform/js-sdk"
      npm_package: "@financial-platform/sdk"
      documentation: "/docs/sdks/javascript"
      
    - name: "python-sdk"
      description: "Official Python SDK"
      version: "1.0.0"
      repository: "https://github.com/financial-platform/python-sdk"
      pypi_package: "financial-platform-sdk"
      documentation: "/docs/sdks/python"
      
    - name: "java-sdk"
      description: "Official Java SDK"
      version: "1.0.0"
      repository: "https://github.com/financial-platform/java-sdk"
      maven_artifact: "com.financialplatform:sdk"
      documentation: "/docs/sdks/java"
      
    - name: "go-sdk"
      description: "Official Go SDK"
      version: "1.0.0"
      repository: "https://github.com/financial-platform/go-sdk"
      go_module: "github.com/financial-platform/sdk"
      documentation: "/docs/sdks/go"

  # Community Libraries
  community_libraries:
    - name: "php-sdk"
      description: "Community PHP SDK"
      version: "1.0.0"
      repository: "https://github.com/community/financial-platform-php"
      composer_package: "community/financial-platform-sdk"
      
    - name: "ruby-sdk"
      description: "Community Ruby SDK"
      version: "1.0.0"
      repository: "https://github.com/community/financial-platform-ruby"
      gem_package: "financial-platform-sdk"
      
    - name: "csharp-sdk"
      description: "Community C# SDK"
      version: "1.0.0"
      repository: "https://github.com/community/financial-platform-csharp"
      nuget_package: "FinancialPlatform.Sdk"

# Testing Tools
testing_tools:
  # API Testing
  api_testing:
    enabled: true
    
    # Testing Environment
    testing_environment:
      - name: "sandbox"
        description: "Sandbox environment for testing"
        url: "https://sandbox-api.financialplatform.com"
        features: ["test_data", "mock_responses", "rate_limits"]
        
      - name: "staging"
        description: "Staging environment for integration testing"
        url: "https://staging-api.financialplatform.com"
        features: ["real_data", "full_functionality", "monitoring"]
        
      - name: "production"
        description: "Production environment"
        url: "https://api.financialplatform.com"
        features: ["live_data", "full_functionality", "monitoring"]

  # Testing Tools
  tools:
    - name: "postman_collection"
      description: "Postman collection for API testing"
      url: "/postman/collection.json"
      documentation: "/docs/testing/postman"
      
    - name: "insomnia_collection"
      description: "Insomnia collection for API testing"
      url: "/insomnia/collection.json"
      documentation: "/docs/testing/insomnia"
      
    - name: "curl_examples"
      description: "cURL examples for API testing"
      url: "/docs/testing/curl"
      documentation: "/docs/testing/curl"
      
    - name: "test_data"
      description: "Test data for API testing"
      url: "/docs/testing/test-data"
      documentation: "/docs/testing/test-data"

# Analytics and Monitoring
analytics_monitoring:
  # API Analytics
  api_analytics:
    enabled: true
    
    # Analytics Dashboard
    dashboard:
      - name: "usage_analytics"
        description: "API usage analytics"
        metrics: ["requests_per_day", "response_times", "error_rates", "popular_endpoints"]
        
      - name: "performance_analytics"
        description: "API performance analytics"
        metrics: ["latency", "throughput", "availability", "uptime"]
        
      - name: "developer_analytics"
        description: "Developer engagement analytics"
        metrics: ["active_developers", "api_adoption", "documentation_views", "support_requests"]

  # Monitoring
  monitoring:
    enabled: true
    
    # Monitoring Tools
    tools:
      - name: "api_health"
        description: "API health monitoring"
        url: "/health"
        metrics: ["status", "response_time", "availability"]
        
      - name: "rate_limits"
        description: "Rate limit monitoring"
        url: "/rate-limits"
        metrics: ["current_usage", "limit", "reset_time"]
        
      - name: "webhooks"
        description: "Webhook delivery monitoring"
        url: "/webhooks/status"
        metrics: ["delivery_status", "retry_count", "last_delivery"]

# Developer Support
developer_support:
  # Support Channels
  support_channels:
    - name: "documentation"
      description: "Comprehensive documentation"
      url: "/docs"
      response_time: "immediate"
      
    - name: "community_forum"
      description: "Community forum for discussions"
      url: "https://community.financialplatform.com"
      response_time: "24 hours"
      
    - name: "email_support"
      description: "Email support for developers"
      email: "developers@financialplatform.com"
      response_time: "4 hours"
      
    - name: "live_chat"
      description: "Live chat support"
      url: "/support/chat"
      response_time: "immediate"
      
    - name: "phone_support"
      description: "Phone support for enterprise customers"
      phone: "+1-800-FINANCIAL"
      response_time: "1 hour"

  # Support Resources
  support_resources:
    - name: "faq"
      description: "Frequently Asked Questions"
      url: "/support/faq"
      
    - name: "troubleshooting"
      description: "Troubleshooting guide"
      url: "/support/troubleshooting"
      
    - name: "best_practices"
      description: "API best practices"
      url: "/docs/best-practices"
      
    - name: "security_guide"
      description: "Security best practices"
      url: "/docs/security"
      
    - name: "compliance_guide"
      description: "Compliance requirements"
      url: "/docs/compliance"

# Developer Portal Features
portal_features:
  # User Management
  user_management:
    enabled: true
    
    # Registration
    registration:
      - name: "email_registration"
        description: "Email-based registration"
        enabled: true
        
      - name: "oauth_registration"
        description: "OAuth-based registration"
        providers: ["google", "github", "microsoft"]
        enabled: true
        
      - name: "enterprise_registration"
        description: "Enterprise registration"
        features: ["sso", "custom_domain", "dedicated_support"]
        enabled: true

  # API Key Management
  api_key_management:
    enabled: true
    
    # Key Features
    features:
      - name: "key_generation"
        description: "Generate API keys"
        enabled: true
        
      - name: "key_rotation"
        description: "Rotate API keys"
        enabled: true
        
      - name: "key_permissions"
        description: "Set key permissions"
        enabled: true
        
      - name: "key_analytics"
        description: "Key usage analytics"
        enabled: true

  # Developer Dashboard
  developer_dashboard:
    enabled: true
    
    # Dashboard Features
    features:
      - name: "api_overview"
        description: "API usage overview"
        enabled: true
        
      - name: "billing"
        description: "Billing and usage"
        enabled: true
        
      - name: "settings"
        description: "Account settings"
        enabled: true
        
      - name: "support"
        description: "Support requests"
        enabled: true

# Portal Customization
portal_customization:
  # Branding
  branding:
    enabled: true
    
    # Brand Elements
    elements:
      - name: "logo"
        description: "Portal logo"
        url: "/assets/logo.png"
        
      - name: "favicon"
        description: "Portal favicon"
        url: "/assets/favicon.ico"
        
      - name: "color_scheme"
        description: "Portal color scheme"
        primary_color: "#007bff"
        secondary_color: "#6c757d"
        
      - name: "custom_css"
        description: "Custom CSS styling"
        url: "/assets/custom.css"

  # Content Management
  content_management:
    enabled: true
    
    # Content Types
    content_types:
      - name: "documentation"
        description: "API documentation"
        editor: "markdown"
        
      - name: "blog_posts"
        description: "Blog posts and announcements"
        editor: "rich_text"
        
      - name: "tutorials"
        description: "Tutorials and guides"
        editor: "markdown"
        
      - name: "examples"
        description: "Code examples"
        editor: "code_editor"

# Portal Analytics
portal_analytics:
  # Analytics Configuration
  analytics_config:
    enabled: true
    provider: "google_analytics"
    tracking_id: "GA-XXXXXXXXX"
    
    # Events
    events:
      - name: "page_view"
        category: "portal"
        action: "view"
        
      - name: "api_test"
        category: "portal"
        action: "test"
        
      - name: "documentation_view"
        category: "portal"
        action: "view"
        
      - name: "support_request"
        category: "portal"
        action: "request"
        
      - name: "registration"
        category: "portal"
        action: "register"
        
      - name: "api_key_generation"
        category: "portal"
        action: "generate_key"
