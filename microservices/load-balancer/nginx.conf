# Nginx Load Balancer Configuration for Financial Platform
# This configuration provides load balancing, SSL termination, and health checks

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream definitions for microservices
    upstream api_gateway {
        least_conn;
        server localhost:8090 max_fails=3 fail_timeout=30s;
        server localhost:8091 max_fails=3 fail_timeout=30s;
        server localhost:8092 max_fails=3 fail_timeout=30s;
    }

    upstream payment_services {
        least_conn;
        server localhost:8083 max_fails=3 fail_timeout=30s;
        server localhost:8091 max_fails=3 fail_timeout=30s;
        server localhost:8092 max_fails=3 fail_timeout=30s;
        server localhost:8093 max_fails=3 fail_timeout=30s;
    }

    upstream financial_services {
        least_conn;
        server localhost:8084 max_fails=3 fail_timeout=30s;
        server localhost:8095 max_fails=3 fail_timeout=30s;
        server localhost:8096 max_fails=3 fail_timeout=30s;
        server localhost:8097 max_fails=3 fail_timeout=30s;
    }

    upstream security_services {
        least_conn;
        server localhost:8085 max_fails=3 fail_timeout=30s;
        server localhost:8088 max_fails=3 fail_timeout=30s;
        server localhost:8099 max_fails=3 fail_timeout=30s;
        server localhost:8100 max_fails=3 fail_timeout=30s;
    }

    upstream infrastructure_services {
        least_conn;
        server localhost:8103 max_fails=3 fail_timeout=30s;
        server localhost:8104 max_fails=3 fail_timeout=30s;
        server localhost:8105 max_fails=3 fail_timeout=30s;
        server localhost:8106 max_fails=3 fail_timeout=30s;
    }

    upstream monitoring_services {
        least_conn;
        server localhost:8115 max_fails=3 fail_timeout=30s;
        server localhost:8116 max_fails=3 fail_timeout=30s;
        server localhost:8117 max_fails=3 fail_timeout=30s;
    }

    # Health check endpoint
    upstream health_check {
        server localhost:8090;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://health_check;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API Gateway routes
        location /api/v1/ {
            limit_req zone=api burst=20 nodelay;
            
            # Route to appropriate upstream based on service
            location ~ ^/api/v1/(payment|journal|fees|refunds) {
                proxy_pass http://payment_services;
            }

            location ~ ^/api/v1/(ledger|fx|payouts|reserves|reconciliation) {
                proxy_pass http://financial_services;
            }

            location ~ ^/api/v1/(risk|compliance|kyb|sca|disputes) {
                proxy_pass http://security_services;
            }

            location ~ ^/api/v1/(auth|idempotency|eventbus|saga|vault|webhooks|observability|config|workers|portal|data-platform|compliance-ops) {
                proxy_pass http://infrastructure_services;
            }

            location ~ ^/api/v1/(database|monitoring|message-queue) {
                proxy_pass http://monitoring_services;
            }

            # Default to API Gateway
            proxy_pass http://api_gateway;
        }

        # Proxy settings for all API routes
        location @proxy {
            proxy_pass $upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Monitoring endpoints
        location /metrics {
            auth_basic "Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://localhost:8116;
        }

        location /grafana {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus endpoint
        location /prometheus {
            proxy_pass http://localhost:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # RabbitMQ Management UI
        location /rabbitmq {
            proxy_pass http://localhost:15672;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Status page
        location /status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location = /404.html {
            root /usr/share/nginx/html;
        }
    }

    # Rate limiting for login endpoints
    server {
        listen 80;
        server_name auth.localhost;

        location / {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://localhost:8103;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
