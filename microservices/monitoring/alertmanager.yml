global:
  resolve_timeout: 5m
  slack_api_url: 'https://hooks.slack.com/services/YOUR_SLACK_WEBHOOK'
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_from: 'alerts@financialplatform.com'
  smtp_auth_username: 'alerts@financialplatform.com'
  smtp_auth_password: 'your-app-password'

route:
  group_by: ['alertname', 'service', 'severity']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'slack-notifications'
  routes:
    # Critical alerts - immediate notification
    - match:
        severity: critical
      receiver: 'pager-duty-critical'
      continue: true
      group_wait: 0s
      group_interval: 5s
      repeat_interval: 30m
    
    # High severity alerts - notify within 5 minutes
    - match:
        severity: high
      receiver: 'slack-high-priority'
      continue: true
      group_wait: 30s
      group_interval: 2m
      repeat_interval: 1h
    
    # Database alerts - special handling
    - match:
        service: database
      receiver: 'database-team'
      continue: true
      group_wait: 1m
      group_interval: 5m
      repeat_interval: 2h
    
    # Payment service alerts - immediate escalation
    - match:
        service: payment
      receiver: 'payment-team'
      continue: true
      group_wait: 0s
      group_interval: 1m
      repeat_interval: 15m
    
    # Security alerts - immediate notification
    - match:
        service: security
      receiver: 'security-team'
      continue: true
      group_wait: 0s
      group_interval: 30s
      repeat_interval: 10m

inhibit_rules:
  # Inhibit critical alerts when service is down
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['service']
  
  # Inhibit payment alerts when database is down
  - source_match:
      service: 'database'
      severity: 'critical'
    target_match:
      service: 'payment'
    equal: ['instance']

receivers:
  - name: 'slack-notifications'
    slack_configs:
      - channel: '#alerts'
        title: '{{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true
        icon_url: 'https://avatars3.githubusercontent.com/u/3380462'
        icon_emoji: ':warning:'
        actions:
          - type: button
            text: 'View in Grafana'
            url: '{{ template "slack.grafanaURL" . }}'
          - type: button
            text: 'Acknowledge'
            url: '{{ template "slack.ackURL" . }}'

  - name: 'pager-duty-critical'
    pagerduty_configs:
      - routing_key: 'your-pagerduty-routing-key'
        description: '{{ template "pagerduty.description" . }}'
        severity: '{{ if eq .CommonLabels.severity "critical" }}critical{{ else }}warning{{ end }}'
        client: 'Financial Platform AlertManager'
        client_url: '{{ template "pagerduty.clientURL" . }}'

  - name: 'slack-high-priority'
    slack_configs:
      - channel: '#high-priority-alerts'
        title: 'üö® HIGH PRIORITY: {{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true
        icon_emoji: ':rotating_light:'

  - name: 'database-team'
    slack_configs:
      - channel: '#database-team'
        title: 'üóÑÔ∏è DATABASE: {{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true
        icon_emoji: ':database:'
    email_configs:
      - to: 'database-team@financialplatform.com'
        send_resolved: true

  - name: 'payment-team'
    slack_configs:
      - channel: '#payment-team'
        title: 'üí≥ PAYMENT: {{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true
        icon_emoji: ':credit_card:'
    pagerduty_configs:
      - routing_key: 'payment-team-pagerduty-key'
        description: 'Payment Service Alert: {{ .CommonAnnotations.summary }}'

  - name: 'security-team'
    slack_configs:
      - channel: '#security-alerts'
        title: 'üîí SECURITY: {{ template "slack.title" . }}'
        text: '{{ template "slack.text" . }}'
        send_resolved: true
        icon_emoji: ':lock:'
    email_configs:
      - to: 'security@financialplatform.com'
        send_resolved: true
    webhook_configs:
      - url: 'https://security-tools.company.com/webhook'
        send_resolved: true

templates:
  - '/etc/alertmanager/template/*.tmpl'
